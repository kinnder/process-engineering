/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package application.ui;

import application.Application;
import application.ApplicationArguments;
import application.UserInterface;
import application.command.ConvertCommandData;
import application.command.NewSystemTransformationsCommandData;
import application.command.NewTaskDescriptionCommandData;
import application.command.PlanCommandData;
import application.command.VerifyCommandData;
import application.event.CommandStatusEvent;
import application.event.HelpMessageEvent;

import java.awt.event.ActionEvent;
import java.beans.PropertyChangeListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;

/**
 *
 * @author kinnd
 */
// TODO (2022-01-13 #61): включить проверку PMD
@SuppressWarnings("unused")
public class MainViewFrame extends javax.swing.JFrame implements UserInterface {

    /**
     * Creates new form MainViewFrame
     */
    public MainViewFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Process Engineering");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"domain", null},
                {"systemTransformationsFile", "systemTransformations.xml"},
                {"taskDescriptionFile", "taskDescription.xml"},
                {"processFile", "process.xml"},
                {"nodeNetworkFile", "nodeNetwork.xml"}
            },
            new String [] {
                "Parameter", "Value"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jMenu1.setText("Application");

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Commands");

        jMenuItem2.setText("Convert");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("New Transformations");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("New Task");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Plan");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Verify");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        jMenuItem7.setText("Commands");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("About");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
        	@Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // exit-button:
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // plan-button:
        PlanCommandData data = new PlanCommandData();
	data.taskDescriptionFile = getModelValue_TaskDescription();
	data.systemTransformationsFile = getModelValue_SystemTransformations();
	data.processFile = getModelValue_Process();
	data.nodeNetworkFile = getModelValue_NodeNetwork();
        application.getPlanCommand().run(data);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // verify-button:
        VerifyCommandData data = new VerifyCommandData();
	data.taskDescriptionFile = getModelValue_TaskDescription();
	data.systemTransformationsFile = getModelValue_SystemTransformations();
	data.processFile = getModelValue_Process();
	data.nodeNetworkFile = getModelValue_NodeNetwork();
        application.getVerifyCommand().run(data);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // new-task-button:
        NewTaskDescriptionCommandData data = new NewTaskDescriptionCommandData();
	data.taskDescriptionFile = getModelValue_TaskDescription();
	data.domain = getModelValue_Domain();
        application.getNewTaskDescriptionCommand().run(data);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // new-system-transformation-button:
        NewSystemTransformationsCommandData data = new NewSystemTransformationsCommandData();
	data.systemTransformationsFile = getModelValue_SystemTransformations();
	data.domain = getModelValue_Domain();
	application.getNewSystemTransformationsCommand().run(data);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // convert-button:
        ConvertCommandData data = new ConvertCommandData();
	data.taskDescriptionFile = getModelValue_TaskDescription();
	data.systemTransformationsFile = getModelValue_SystemTransformations();
	data.processFile = getModelValue_Process();
	data.nodeNetworkFile = getModelValue_NodeNetwork();
	application.getConvertCommand().run(data);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        try {
            // commands-button:
            application.showHelp();
        } catch (Exception ex) {
            Logger.getLogger(MainViewFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // about-button:
        java.awt.EventQueue.invokeLater(new Runnable() {
        	@Override
            public void run() {
                new AboutFrame().setVisible(true);
            }
        });
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainViewFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
@Override
            public void run() {
                new MainViewFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

	private Application application = new Application();

	public void setApplication(Application application) {
		this.application = application;
	}

	public void updateComponents() {
		ApplicationArguments appArgs = application.getArguments();
                setModelValue_Domain(appArgs.getArgument_domain("unknown"));
		setModelValue_SystemTransformations(appArgs.getArgument_st("systemTransformations.xml"));
		setModelValue_TaskDescription(appArgs.getArgument_td("taskDescription.xml"));
		setModelValue_Process(appArgs.getArgument_p("process.xml"));
		setModelValue_NodeNetwork(appArgs.getArgument_nn("nodeNetwork.xml"));
	}

	private void setModelValue_Domain(String value) {
		jTable1.getModel().setValueAt(value, 0, 1);
	}

	private String getModelValue_Domain() {
		return (String) jTable1.getModel().getValueAt(0, 1);
	}

	private void setModelValue_SystemTransformations(String value) {
		jTable1.getModel().setValueAt(value, 1, 1);
	}

	private String getModelValue_SystemTransformations() {
		return (String) jTable1.getModel().getValueAt(1, 1);
	}

	private void setModelValue_TaskDescription(String value) {
		jTable1.getModel().setValueAt(value, 2, 1);
	}

	private String getModelValue_TaskDescription() {
		return (String) jTable1.getModel().getValueAt(2, 1);
	}

	private void setModelValue_Process(String value) {
		jTable1.getModel().setValueAt(value, 3, 1);
	}

	private String getModelValue_Process() {
		return (String) jTable1.getModel().getValueAt(3, 1);
	}

	private void setModelValue_NodeNetwork(String value) {
		jTable1.getModel().setValueAt(value, 4, 1);
	}

	private String getModelValue_NodeNetwork() {
		return (String) jTable1.getModel().getValueAt(4, 1);
	}

	@Override
	public void notifyHelpMessage(HelpMessageEvent event) {
		// TODO Auto-generated method stub
                jTextArea1.append(event.message);
                jTextArea1.append("\n");
	}

	@Override
	public void notifyCommandStatus(CommandStatusEvent event) {
		// TODO Auto-generated method stub
                jTextArea1.append(event.message);
                jTextArea1.append("\n");
	}
}
