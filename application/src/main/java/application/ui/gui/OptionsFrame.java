package application.ui.gui;

import application.Application;
import application.ApplicationArguments;

public class OptionsFrame extends javax.swing.JFrame {

	private static final long serialVersionUID = -2436536972189436722L;

	public OptionsFrame() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jtParameters = new javax.swing.JTable();
		jPanel1 = new javax.swing.JPanel();
		jbOK = new javax.swing.JButton();
		jbCancel = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Options");

		jtParameters.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { "domain", null }, { "systemTransformationsFile", "systemTransformations.xml" },
						{ "taskDescriptionFile", "taskDescription.xml" }, { "processFile", "process.xml" },
						{ "nodeNetworkFile", "nodeNetwork.xml" } },
				new String[] { "Parameter", "Value" }) {
			private static final long serialVersionUID = 52437947893455554L;
			boolean[] canEdit = new boolean[] { false, true };

			@Override
			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jtParameters.getTableHeader().setReorderingAllowed(false);
		jScrollPane1.setViewportView(jtParameters);

		jbOK.setText("OK");
		jbOK.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbOKActionPerformed(evt);
			}
		});

		jbCancel.setText("Cancel");
		jbCancel.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbCancelActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jbOK).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jbCancel).addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel1Layout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jbOK).addComponent(jbCancel))
								.addContainerGap()));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jPanel1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	@SuppressWarnings("unused")
	private void jbCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbCancelActionPerformed
		this.dispose();
	}// GEN-LAST:event_jbCancelActionPerformed

	@SuppressWarnings("unused")
	private void jbOKActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbOKActionPerformed
		ApplicationArguments appArgs = application.getArguments();
		appArgs.setArgument_d(getModelValue_Domain());
		appArgs.setArgument_st(getModelValue_SystemTransformations());
		appArgs.setArgument_td(getModelValue_TaskDescription());
		appArgs.setArgument_p(getModelValue_Process());
		appArgs.setArgument_nn(getModelValue_NodeNetwork());
		this.dispose();
	}// GEN-LAST:event_jbOKActionPerformed

	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new OptionsFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton jbCancel;
	private javax.swing.JButton jbOK;
	private javax.swing.JTable jtParameters;
	// End of variables declaration//GEN-END:variables

	private Application application = new Application();

	public void setApplication(Application application) {
		this.application = application;
	}

	public void updateComponents() {
		ApplicationArguments appArgs = application.getArguments();
		setModelValue_Domain(appArgs.getArgument_d("unknown"));
		setModelValue_SystemTransformations(appArgs.getArgument_st("systemTransformations.xml"));
		setModelValue_TaskDescription(appArgs.getArgument_td("taskDescription.xml"));
		setModelValue_Process(appArgs.getArgument_p("process.xml"));
		setModelValue_NodeNetwork(appArgs.getArgument_nn("nodeNetwork.xml"));
	}

	private void setModelValue_Domain(String value) {
		jtParameters.getModel().setValueAt(value, 0, 1);
	}

	private String getModelValue_Domain() {
		return (String) jtParameters.getModel().getValueAt(0, 1);
	}

	private void setModelValue_SystemTransformations(String value) {
		jtParameters.getModel().setValueAt(value, 1, 1);
	}

	private String getModelValue_SystemTransformations() {
		return (String) jtParameters.getModel().getValueAt(1, 1);
	}

	private void setModelValue_TaskDescription(String value) {
		jtParameters.getModel().setValueAt(value, 2, 1);
	}

	private String getModelValue_TaskDescription() {
		return (String) jtParameters.getModel().getValueAt(2, 1);
	}

	private void setModelValue_Process(String value) {
		jtParameters.getModel().setValueAt(value, 3, 1);
	}

	private String getModelValue_Process() {
		return (String) jtParameters.getModel().getValueAt(3, 1);
	}

	private void setModelValue_NodeNetwork(String value) {
		jtParameters.getModel().setValueAt(value, 4, 1);
	}

	private String getModelValue_NodeNetwork() {
		return (String) jtParameters.getModel().getValueAt(4, 1);
	}
}
