package application.ui.gui;

import application.Application;
import application.Arguments;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.SwingUtilities;

public class OptionsFrame extends javax.swing.JFrame {

	private static final long serialVersionUID = -2436536972189436722L;

	public OptionsFrame(Application application) {
		this.application = application;

		initComponents();
		setActions();
	}

	private void setActions() {
		jbOk.setAction(okAction);
		jbCancel.setAction(cancelAction);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane1 = new javax.swing.JScrollPane();
		jtParameters = new javax.swing.JTable();
		jPanel1 = new javax.swing.JPanel();
		jbOk = new javax.swing.JButton();
		jbCancel = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Options");

		jtParameters.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { { "domain", "argument_d" },
				{ "systemTransformationsFile", "argument_st" }, { "taskDescriptionFile", "argument_td" },
				{ "processFile", "argument_p" }, { "nodeNetworkFile", "argument_nn" } },
				new String[] { "Parameter", "Value" }) {
			private static final long serialVersionUID = 52437947893455554L;
			boolean[] canEdit = new boolean[] { false, true };

			@Override
			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jtParameters.getTableHeader().setReorderingAllowed(false);
		jScrollPane1.setViewportView(jtParameters);

		jbOk.setText("Ok");

		jbCancel.setText("Cancel");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout
				.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jbOk).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jbCancel).addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel1Layout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(jbOk).addComponent(jbCancel))
								.addContainerGap()));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
				.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
						Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jPanel1,
								javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	Action cancelAction = new AbstractAction("Cancel") {
		private static final long serialVersionUID = 6271527864501074421L;

		@Override
		public void actionPerformed(ActionEvent e) {
			dispose();
		}
	};

	Action okAction = new AbstractAction("Ok") {
		private static final long serialVersionUID = -9086207599483480412L;

		@Override
		public void actionPerformed(ActionEvent e) {
			Arguments arguments = application.getArguments();
			arguments.setArgument_d(getModelValue_Domain());
			arguments.setArgument_st(getModelValue_SystemTransformations());
			arguments.setArgument_td(getModelValue_TaskDescription());
			arguments.setArgument_p(getModelValue_Process());
			arguments.setArgument_nn(getModelValue_NodeNetwork());
			dispose();
		}
	};

	public static void main(String args[]) {
		SwingUtilities.invokeLater(() -> {
			new OptionsFrame(new Application()).setVisible(true);
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton jbCancel;
	private javax.swing.JButton jbOk;
	private javax.swing.JTable jtParameters;
	// End of variables declaration//GEN-END:variables

	private Application application;

	public void updateComponents() {
		Arguments arguments = application.getArguments();
		setModelValue_Domain(arguments.getArgument_d("unknown"));
		setModelValue_SystemTransformations(arguments.getArgument_st("systemTransformations.xml"));
		setModelValue_TaskDescription(arguments.getArgument_td("taskDescription.xml"));
		setModelValue_Process(arguments.getArgument_p("process.xml"));
		setModelValue_NodeNetwork(arguments.getArgument_nn("nodeNetwork.xml"));
	}

	private void setModelValue_Domain(String value) {
		jtParameters.getModel().setValueAt(value, 0, 1);
	}

	private String getModelValue_Domain() {
		return (String) jtParameters.getModel().getValueAt(0, 1);
	}

	private void setModelValue_SystemTransformations(String value) {
		jtParameters.getModel().setValueAt(value, 1, 1);
	}

	private String getModelValue_SystemTransformations() {
		return (String) jtParameters.getModel().getValueAt(1, 1);
	}

	private void setModelValue_TaskDescription(String value) {
		jtParameters.getModel().setValueAt(value, 2, 1);
	}

	private String getModelValue_TaskDescription() {
		return (String) jtParameters.getModel().getValueAt(2, 1);
	}

	private void setModelValue_Process(String value) {
		jtParameters.getModel().setValueAt(value, 3, 1);
	}

	private String getModelValue_Process() {
		return (String) jtParameters.getModel().getValueAt(3, 1);
	}

	private void setModelValue_NodeNetwork(String value) {
		jtParameters.getModel().setValueAt(value, 4, 1);
	}

	private String getModelValue_NodeNetwork() {
		return (String) jtParameters.getModel().getValueAt(4, 1);
	}
}
