package application.ui.gui;

import java.awt.event.ActionEvent;

import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

import application.Application;
import application.ui.UserInterface;
import application.ui.UserInterfaceFactory;

public class MainViewFrame extends javax.swing.JFrame implements UserInterface {
	private static final long serialVersionUID = 514069652804189117L;

	private UserInterfaceFactory userInterfaceFactory;

	public MainViewFrame(Application application) {
		this(application, new UserInterfaceFactory());
	}

	MainViewFrame(Application application, UserInterfaceFactory userInterfaceFactory) {
		this.application = application;
		this.userInterfaceFactory = userInterfaceFactory;

		initComponents();
		setActions();
	}

	private void setActions() {
		jmiAbout.setAction(aboutAction);
		jmiConvert.setAction(convertAction);
		jmiExit.setAction(exitAction);
		jmiNewTaskDescription.setAction(newTaskDescriptionAction);
		jmiNewSystemTransformations.setAction(newSystemTransformationsAction);
		jmiOptions.setAction(optionsAction);
		jmiPlan.setAction(planAction);
		jmiUsage.setAction(usageAction);
		jmiVerify.setAction(verifyAction);
		jmiTaskDescriptionEditor.setAction(taskDescriptionEditorAction);
		jmiNodeNetworkEditor.setAction(nodeNetworkEditorAction);
		jmiSystemTransformationsEditor.setAction(systemTransformationsEditorAction);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtaLog = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmApplication = new javax.swing.JMenu();
        jmiOptions = new javax.swing.JMenuItem();
        jmiEditor = new javax.swing.JMenuItem();
        jmiExit = new javax.swing.JMenuItem();
        jmCommands = new javax.swing.JMenu();
        jmiConvert = new javax.swing.JMenuItem();
        jmiNewSystemTransformations = new javax.swing.JMenuItem();
        jmiNewTaskDescription = new javax.swing.JMenuItem();
        jmiPlan = new javax.swing.JMenuItem();
        jmiVerify = new javax.swing.JMenuItem();
        jmEditors = new javax.swing.JMenu();
        jmiTaskDescriptionEditor = new javax.swing.JMenuItem();
        jmiSystemTransformationsEditor = new javax.swing.JMenuItem();
        jmiNodeNetworkEditor = new javax.swing.JMenuItem();
        jmHelp = new javax.swing.JMenu();
        jmiUsage = new javax.swing.JMenuItem();
        jmiAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Process Engineering");
        setName("jfMainView"); // NOI18N

        jtaLog.setEditable(false);
        jtaLog.setColumns(20);
        jtaLog.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jtaLog.setRows(5);
        jScrollPane1.setViewportView(jtaLog);

        jmApplication.setText("Application");

        jmiOptions.setText("Options...");
        jmApplication.add(jmiOptions);

        jmiEditor.setText("Editor...");
        jmiEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiEditorActionPerformed(evt);
            }
        });
        jmApplication.add(jmiEditor);

        jmiExit.setText("Exit");
        jmApplication.add(jmiExit);

        jMenuBar1.add(jmApplication);

        jmCommands.setText("Commands");

        jmiConvert.setText("Convert");
        jmCommands.add(jmiConvert);

        jmiNewSystemTransformations.setText("New Transformations");
        jmCommands.add(jmiNewSystemTransformations);

        jmiNewTaskDescription.setText("New Task");
        jmCommands.add(jmiNewTaskDescription);

        jmiPlan.setText("Plan");
        jmCommands.add(jmiPlan);

        jmiVerify.setText("Verify");
        jmCommands.add(jmiVerify);

        jMenuBar1.add(jmCommands);

        jmEditors.setText("Editors");

        jmiTaskDescriptionEditor.setText("Task Description Editor");
        jmEditors.add(jmiTaskDescriptionEditor);

        jmiSystemTransformationsEditor.setText("Transformations Editor");
        jmEditors.add(jmiSystemTransformationsEditor);

        jmiNodeNetworkEditor.setText("Node Network Editor");
        jmEditors.add(jmiNodeNetworkEditor);

        jMenuBar1.add(jmEditors);

        jmHelp.setText("Help");

        jmiUsage.setText("Usage");
        jmHelp.add(jmiUsage);

        jmiAbout.setText("About");
        jmHelp.add(jmiAbout);

        jMenuBar1.add(jmHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiEditorActionPerformed
        // TODO add your handling code here:
	EditorFrame frame = new EditorFrame();
	frame.setVisible(true);
    }//GEN-LAST:event_jmiEditorActionPerformed

	Action optionsAction = new AbstractAction("Options...") {
		private static final long serialVersionUID = 7353392578629559123L;

		@Override
		public void actionPerformed(ActionEvent evt) {
			OptionsFrame frame = userInterfaceFactory.createOptionsView(application);
			frame.updateComponents();
			frame.setVisible(true);
		}
	};

	Action nodeNetworkEditorAction = new AbstractAction("Node Network Editor") {
		private static final long serialVersionUID = 553215988718603009L;

		@Override
		public void actionPerformed(ActionEvent e) {
			NodeNetworkEditorFrame frame = userInterfaceFactory.createNodeNetworkEditorView();
			frame.setVisible(true);
		}
	};

	Action systemTransformationsEditorAction = new AbstractAction("Transformations Editor") {
		private static final long serialVersionUID = 5229889242759466230L;

		@Override
		public void actionPerformed(ActionEvent e) {
			SystemTransformationsEditorFrame frame = userInterfaceFactory.createSystemTransformationsEditorView();
			frame.setVisible(true);
		}
	};

	Action taskDescriptionEditorAction = new AbstractAction("Task Description Editor") {
		private static final long serialVersionUID = -5910031266045939508L;

		@Override
		public void actionPerformed(ActionEvent e) {
			TaskDescriptionEditorFrame frame = userInterfaceFactory.createTaskDescriptionEditorView();
			frame.setVisible(true);
		}
	};

	Action exitAction = new AbstractAction("Exit") {
		private static final long serialVersionUID = 553215988718603009L;

		@Override
		public void actionPerformed(ActionEvent e) {
			application.stopApplication();
		}
	};

	Action planAction = new AbstractAction("Plan") {
		private static final long serialVersionUID = 5229889242759466230L;

		@Override
		public void actionPerformed(ActionEvent e) {
			application.plan();
		}
	};

	Action verifyAction = new AbstractAction("Verify") {
		private static final long serialVersionUID = 7353392578629559123L;

		@Override
		public void actionPerformed(ActionEvent e) {
			application.verify();
		}
	};

	Action newTaskDescriptionAction = new AbstractAction("New Task") {
		private static final long serialVersionUID = -6559945594959339816L;

		@Override
		public void actionPerformed(ActionEvent e) {
			application.newTaskDescription();
		}
	};

	Action newSystemTransformationsAction = new AbstractAction("New Transformations") {
		private static final long serialVersionUID = 8677870804332905954L;

		@Override
		public void actionPerformed(ActionEvent e) {
			application.newSystemTransformations();
		}
	};

	Action convertAction = new AbstractAction("Convert") {
		private static final long serialVersionUID = -5142639452014173083L;

		@Override
		public void actionPerformed(ActionEvent e) {
			application.convert();
		}
	};

	Action usageAction = new AbstractAction("Usage") {
		private static final long serialVersionUID = -5027301856157970456L;

		@Override
		public void actionPerformed(ActionEvent e) {
			application.usageHelp();
		}
	};

	Action aboutAction = new AbstractAction("About") {
		private static final long serialVersionUID = -968420889758107148L;

		@Override
		public void actionPerformed(ActionEvent e) {
			AboutFrame frame = userInterfaceFactory.createAboutView();
			frame.setLocationRelativeTo(MainViewFrame.this);
			frame.setVisible(true);
		}
	};

	public static void main(String args[]) throws Exception {
		initializeLookAndFeel();
		SwingUtilities.invokeLater(() -> {
			new MainViewFrame(new Application()).setVisible(true);
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu jmApplication;
    private javax.swing.JMenu jmCommands;
    private javax.swing.JMenu jmEditors;
    private javax.swing.JMenu jmHelp;
    private javax.swing.JMenuItem jmiAbout;
    private javax.swing.JMenuItem jmiConvert;
    private javax.swing.JMenuItem jmiEditor;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiNewSystemTransformations;
    private javax.swing.JMenuItem jmiNewTaskDescription;
    private javax.swing.JMenuItem jmiNodeNetworkEditor;
    private javax.swing.JMenuItem jmiOptions;
    private javax.swing.JMenuItem jmiPlan;
    private javax.swing.JMenuItem jmiSystemTransformationsEditor;
    private javax.swing.JMenuItem jmiTaskDescriptionEditor;
    private javax.swing.JMenuItem jmiUsage;
    private javax.swing.JMenuItem jmiVerify;
    private javax.swing.JTextArea jtaLog;
    // End of variables declaration//GEN-END:variables

	private Application application;

	@Override
	public void displayMessage(String message) {
		jtaLog.append(message);
		jtaLog.append("\n");
	}

	public static void initializeLookAndFeel() throws Exception {
		for (LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
			if ("Nimbus".equals(info.getName())) {
				UIManager.setLookAndFeel(info.getClassName());
				break;
			}
		}
	}

	@Override
	public void start() throws Exception {
		initializeLookAndFeel();
		setVisible(true);
	}

	@Override
	public void stop() {
		dispose();
	}
}
